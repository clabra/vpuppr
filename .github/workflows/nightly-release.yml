---
name: Create nightly artifact
on:
  schedule:
    - cron: "59 23 * * *"
  workflow_dispatch:

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os-name: windows
            os: windows-latest
            export-preset-name: windows
            release-template-url: "https://github.com/virtual-puppet-project/godot-builds/releases/download/latest/Godot_v3.x-stable_windows_release.64.exe.tar.gz"
          - os-name: linux
            os: ubuntu-latest
            export-preset-name: linux
            release-template-url: "https://github.com/virtual-puppet-project/godot-builds/releases/download/latest/Godot_v3.x-stable_linux_release.64.tar.gz"
          - os-name: linux
            os: ubuntu-latest
            export-preset-name: flatpak
            release-template-url: "https://github.com/virtual-puppet-project/godot-builds/releases/download/latest/Godot_v3.x-stable_linux_release.64.tar.gz"
          ## Disabled for now since OSX templates are not packed correctly
          # - os_name: osx
          #   os: macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Build default extensions
        if: matrix.os != 'macos-latest'
        shell: bash
        run: |
          python -m pip install requests
          python scripts/setup_extensions.py --setup --export
      - name: Build default extensions
        if: matrix.os == 'macos-latest'
        shell: bash
        run: |
          python3 -m pip install requests
          python3 scripts/setup_extensions.py --setup --export

      - name: Download Godot binaries
        shell: bash
        run: |
          curl -L https://github.com/virtual-puppet-project/godot-builds/releases/download/latest/Godot_v3.x-stable_linux_headless.64.tar.gz -o editor.tar.gz
          tar -xzvf editor.tar.gz

          chmod +x Godot_v3.x-stable_linux_headless.64

          mkdir release_templates
          cd release_templates

          curl -L ${{ matrix.release-template-url }} -o template.tar.gz

          tar -xzvf *.tar.gz

      - name: Set export path
        shell: bash
        run: echo "EXPORT_PATH=export/${{ matrix.export-preset-name }}" >> $GITHUB_ENV

      - name: Export project
        shell: bash
        run: |
          mkdir ${{ env.EXPORT_PATH }}

          ./Godot_v3.x-stable_linux_headless.64 --export ${{ matrix.export-preset-name }} ${{ env.EXPORT_PATH }}

          mv resources ${{ env.EXPORT_PATH }}

      - name: Fix executable bit
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: chmod +x ${{ env.EXPORT_PATH }}/vpuppr.x86_64

      - name: Set tar name
        shell: bash
        run: echo "TAR_NAME=vpuppr_nightly_${{ matrix.os }}.tar.gz" >> $GITHUB_ENV

      - name: Pack release into tar.gz
        shell: bash
        run: |
          cd export
          tar -czvf ${{ env.TAR_NAME }} ${{ matrix.export-preset-name }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.TAR_NAME }}
          path: export/${{ env.TAR_NAME }}
